---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
---

<div class="theme-toggle" id="theme-toggle" title="Toggle Dark Mode">
	<span class="theme-icon">🌙</span>
</div>

<header>
	<nav class="nav-container">
		<div class="nav-content">
			<div class="logo">
				<a href="/" class="logo-link">
					<div class="wave-icon">🌊</div>
					<h2 class="logo-text">{SITE_TITLE}</h2>
				</a>
			</div>
			<div class="nav-links">
				<HeaderLink href="/">Home</HeaderLink>
				<HeaderLink href="/about">About</HeaderLink>
				<HeaderLink href="/blog">Blog</HeaderLink>
				<HeaderLink href="/courses">Courses</HeaderLink>
				<HeaderLink href="/contact">Contact</HeaderLink>
			</div>
			<div class="mobile-menu-toggle" id="mobile-menu-toggle">
				<span></span>
				<span></span>
				<span></span>
			</div>
		</div>
	</nav>
</header>

<style>
	header {
		background: var(--card-bg);
		box-shadow: var(--shadow-sm);
		position: sticky;
		top: 0;
		z-index: 100;
		transition: background-color var(--transition-normal);
	}

	.nav-container {
		padding: 0;
	}

	.nav-content {
		max-width: 1200px;
		margin: 0 auto;
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding: var(--spacing-sm) var(--spacing-md);
	}

	.logo {
		display: flex;
		align-items: center;
	}

	.logo-link {
		display: flex;
		align-items: center;
		text-decoration: none;
		color: var(--text-heading);
		transition: color var(--transition-fast);
	}

	.logo-link:hover {
		color: var(--ocean-blue);
	}

	.wave-icon {
		font-size: 2rem;
		margin-right: var(--spacing-xs);
		animation: bounce 2s infinite;
	}

	@keyframes bounce {
		0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
		40% { transform: translateY(-10px); }
		60% { transform: translateY(-5px); }
	}

	.logo-text {
		font-size: 1.5rem;
		font-weight: 700;
		margin: 0;
		background: var(--wave-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
	}

	.nav-links {
		display: flex;
		align-items: center;
		gap: var(--spacing-lg);
	}

	.mobile-menu-toggle {
		display: none;
		flex-direction: column;
		cursor: pointer;
		padding: var(--spacing-xs);
	}

	.mobile-menu-toggle span {
		width: 25px;
		height: 3px;
		background: var(--ocean-blue);
		margin: 3px 0;
		transition: var(--transition-normal);
		border-radius: 2px;
	}

	.mobile-menu-toggle.active span:nth-child(1) {
		transform: rotate(-45deg) translate(-5px, 6px);
	}

	.mobile-menu-toggle.active span:nth-child(2) {
		opacity: 0;
	}

	.mobile-menu-toggle.active span:nth-child(3) {
		transform: rotate(45deg) translate(-5px, -6px);
	}

	@media (max-width: 768px) {
		.nav-links {
			display: none;
			position: absolute;
			top: 100%;
			left: 0;
			right: 0;
			background: var(--card-bg);
			box-shadow: var(--shadow-md);
			flex-direction: column;
			padding: var(--spacing-md);
			gap: var(--spacing-sm);
		}

		.nav-links.mobile-open {
			display: flex;
		}

		.mobile-menu-toggle {
			display: flex;
		}
	}
</style>

<script>
	// Theme toggle functionality
	const themeToggle = document.getElementById('theme-toggle');
	const themeIcon = document.querySelector('.theme-icon');
	const htmlElement = document.documentElement;

	// Check for saved theme preference or default to 'light'
	const currentTheme = localStorage.getItem('theme') || 'light';
	htmlElement.setAttribute('data-theme', currentTheme);
	updateThemeIcon(currentTheme);

	function updateThemeIcon(theme: string) {
		if (themeIcon) {
			themeIcon.textContent = theme === 'dark' ? '☀️' : '🌙';
		}
	}

	function toggleTheme() {
		const currentTheme = htmlElement.getAttribute('data-theme');
		const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
		
		htmlElement.setAttribute('data-theme', newTheme);
		localStorage.setItem('theme', newTheme);
		updateThemeIcon(newTheme);
	}

	themeToggle?.addEventListener('click', toggleTheme);

	// Mobile menu toggle functionality
	const mobileToggle = document.getElementById('mobile-menu-toggle');
	const navLinks = document.querySelector('.nav-links');

	mobileToggle?.addEventListener('click', () => {
		navLinks?.classList.toggle('mobile-open');
		mobileToggle.classList.toggle('active');
	});
</script>
